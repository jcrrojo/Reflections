When would you want to create a remote repository rather than keeping all your work local?
When I want to create a remote repository, I push from local repository

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
I want to be sure that my work is well, before I sharing it

Describe the differences between forks, clones, and branches. When would you use one instead of another?
The forks are used to clone a repository on your own account at GitHub. The clones are used to copy a repository on a local workdirectory. The branches are used to construct a different or parallel path in a working prcess.

What is the benefit of having a copy of the last known state of the remote stored locally?
I can update my local repository when you need it, even without Internet connection

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I could collaborate using collaborative tools such as Evernote. The sequence would be: I write a text file, such as a program, I share in Evernote; anyone of the team can modify it. If I accept the change, I transfer it to my text file, I keep another name and version number.
The easierst thing would be to keep my sequence of text files with their versions. The hardest thing would be to achieve efficiency in the collaborative task, because we would not have a system to detect and resolve conflicts.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
It is convenient to make changes to a different branch when changes may conflict with the master branch. The benefit is greatest when we work with other people, because in that case the potential for conflict multiply and must be controlled.